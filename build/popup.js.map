{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAO;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;UCrCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNa;;AAE4C;AACpC;;AAErB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B,iDAAY;AAC3C,UAAU;AACV,+BAA+B,oDAAe;AAC9C;AACA,KAAK;AACL,CAAC,I","sources":["webpack://parami-extension-wnft/./src/popup.css","webpack://parami-extension-wnft/./src/models.js","webpack://parami-extension-wnft/webpack/bootstrap","webpack://parami-extension-wnft/webpack/runtime/define property getters","webpack://parami-extension-wnft/webpack/runtime/hasOwnProperty shorthand","webpack://parami-extension-wnft/webpack/runtime/make namespace object","webpack://parami-extension-wnft/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export const EMPTY_CONTRACT = '0x0000000000000000000000000000000000000000';\n\nexport const PREFIX_CONTRACT = '0x';\n\nexport const PREFIX_HTTP = 'http://';\n\nexport const PREFIX_HTTPS = 'https://';\n\nexport const PREFIX_IPFS = 'ipfs://';\n\nexport const PREFIX_IPFS_URL = 'https://ipfs.io/ipfs/';\n\nexport const PREFIX_WNFT = 'wnft://';\n\nexport const PREFIX_DID = 'did://';\n\nexport const LINK_BADGE_CLASSNAME = 'pfp-link-badge';\n\nexport const MULTI_JUMP_LIMIT = 5;\n\nexport const TYPE_ID_2_STRING = {\n    '1': 'wnft',\n    '2': 'did'\n}\n\nexport const NETWORK_MAINNET = {\n    graph: 'https://graph.parami.io/',\n    rpc: 'https://app.parami.io/',\n    paramiLinkAddress: '0x955A4432662Cf9F5A2d06FfEBff712bDCAfEA55F',\n    chainId: 1\n}\n\nexport const NETWORK_TEST = {\n    graph: 'https://staging.parami.io/graph/',\n    rpc: 'https://staging.parami.io/',\n    paramiLinkAddress: '0x7F1Ae9F3740A9192fb10Ec8Cff48B9401f61f74A',\n    chainId: 4\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nimport { NETWORK_TEST, NETWORK_MAINNET } from './models';\nimport './popup.css';\n\n(() => {\n    const networkStorage = {\n        get: cb => {\n            chrome.storage.sync.get(['network'], result => {\n                cb(result.network);\n            });\n        },\n        set: (value) => {\n            chrome.storage.sync.set(\n                {\n                    network: value,\n                },\n            );\n        },\n    };\n\n    const checkbox = document.querySelector('#networkCheckbox');\n\n    networkStorage.get(network => {\n        if (network?.chainId === 4) {\n            checkbox.setAttribute('checked', true);\n        }\n    });\n\n    checkbox.addEventListener('change', (e) => {\n        if (e.target.checked) {\n            networkStorage.set(NETWORK_TEST)\n        } else {\n            networkStorage.set(NETWORK_MAINNET)\n        }\n    });\n})();"],"names":[],"sourceRoot":""}